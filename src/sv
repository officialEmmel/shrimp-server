        this.USERS.forEach(reg => {
            // if(user.token == reg.token) {
            //     reg.id = user.id
            //     reg.name = user.name
            //     reg.color = user.color
            //     reg.socket = socket
            //     socket.join("public");
            //     console.log("reconnected as " + user.name)
            //     user.socket.emit("updated", {member:this._deprivateUser(reg)})
            //     this._updateUsers()
            // } else {
            //     let u = new User(user)
            //     this.USERS.push(u)
            //     socket.join("public");
            //     console.log("connected as " + user.name)
            //     user.socket.emit("registered", {member:this._deprivateUser(u)})
            //     this._updateUsers()
            // }            
        });


        

                    // socket.on('private',  (json: any) => {
            //     console.log("incoming message ", json)
            //     this._messageManager._handlePrivateMessage(
            //         this._privateChatManager,
            //         this._userManager,
            //         json.message, 
            //         json.sender, 
            //         json.addressee
            //     )
            // })

            // socket.on('get_chat',  (json: any) => {
            //     console.log("incoming chat request ", json)
            //     let _sender = this._userManager._getUserByToken(json.sender)
            //     let _addressee = this._userManager._getUserByID(json.addressee)
            //     if(_sender == null) {console.log("sender not found, wtf how");return "sender not found, wtf how"}
            //     if(_addressee == null) {console.log("addressee not found");return "addressee not found"}
            //     let h = this._privateChatManager._getChatHistory(_sender,_addressee)
            //     console.log("h",h);
            //     if(h != null) {socket.emit("history",{messages:h}); return}
            //     socket.emit("history",{messages:[]})
            //     return
            // })
